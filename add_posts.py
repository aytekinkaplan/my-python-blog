from app import app, db
from app.models import BlogPost

# Drop and recreate the database
db.drop_all()
db.create_all()

# Add sample blog posts
post1 = BlogPost(title='My First Python Project', content='This was my first Python project. I built a website using Flask.')
post2 = BlogPost(title='Data Structures in Python', content='I want to share what I learned about lists, dictionaries, and sets in Python.')
post3 = BlogPost(title='Web Development with Flask', content='I will explain how to quickly develop web applications using Flask.')
post4 = BlogPost(title='Understanding Python Functions', content='In this post, I will discuss how functions work in Python, including arguments and return values.')
post5 = BlogPost(title='Getting Started with Django', content='Django is a powerful web framework. I will show how to start a Django project.')
post6 = BlogPost(title='Working with APIs in Python', content='This post covers how to make HTTP requests and interact with APIs in Python using the requests library.')
post7 = BlogPost(title='Python Decorators', content='Learn how to use decorators in Python to add functionality to your functions.')
post8 = BlogPost(title='Exploring Python Generators', content='Generators are a great way to handle large datasets efficiently. In this post, I will dive into how to use them.')
post9 = BlogPost(title='Object-Oriented Programming in Python', content='An introduction to classes, objects, and OOP principles in Python.')
post10 = BlogPost(title='Using SQLite with Flask', content='I will show you how to integrate SQLite, a lightweight database, with Flask for small applications.')
post11 = BlogPost(title='Error Handling in Python', content='Learn how to handle exceptions in Python with try, except, and finally blocks.')
post12 = BlogPost(title='Introduction to Machine Learning with Python', content='This post explores basic concepts of machine learning and how to implement simple models using Python.')
post13 = BlogPost(title='Understanding List Comprehensions in Python', content='A deep dive into list comprehensions and how to use them to write cleaner Python code.')
post14 = BlogPost(title='File Handling in Python', content='This post explains how to read from and write to files in Python, including working with different file formats.')
post15 = BlogPost(title='Using Flask Extensions', content='Learn about Flask extensions and how they can enhance your web development workflow.')
post16 = BlogPost(title='Working with JSON in Python', content='An introduction to handling JSON data in Python, including encoding and decoding JSON.')
post17 = BlogPost(title='Building REST APIs with Flask', content='A step-by-step guide to creating a RESTful API using Flask and Python.')
post18 = BlogPost(title='Automating Tasks with Python', content='This post covers how to use Python scripts to automate repetitive tasks on your system.')
post19 = BlogPost(title='Multithreading in Python', content='Learn how to achieve concurrency in Python using multithreading and the threading module.')
post20 = BlogPost(title='Exploring the Python Standard Library', content='An overview of some of the most useful modules in the Python Standard Library, including os, sys, and datetime.')

db.session.add(post1)
db.session.add(post2)
db.session.add(post3)
db.session.add(post4)
db.session.add(post5)
db.session.add(post6)
db.session.add(post7)
db.session.add(post8)
db.session.add(post9)
db.session.add(post10)
db.session.add(post11)
db.session.add(post12)
db.session.add(post13)
db.session.add(post14)
db.session.add(post15)
db.session.add(post16)
db.session.add(post17)
db.session.add(post18)
db.session.add(post19)
db.session.add(post20)
db.session.commit()

print("Blog posts have been added successfully!")
